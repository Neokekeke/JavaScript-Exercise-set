这里是个人对学习前端基础知识的补充和总结，希望自己越来越强大^_^

HTML&CSS：
	对Web标准的理解（结构、表现、行为）、浏览器内核、渲染原理、依赖管理、兼容性、CSS语法、层次关系，常用属性、布局、选择器、权重、盒模型、
	Hack、CSS预处理器、CSS3、Flexbox、CSS Modules、Document flow、BFC、HTML5（离线 & 存储、Histoy,多媒体、WebGL\SVG\Canvas）；


	1、web标准（结构，表现，行为）
	   1.1 结构 对应的是body中的标签，形成的标签骨架
	   1.2 表现 对应的是标签骨架的css样式表，引入css样式表从而使得页面骨架更美观
	   1.3 行为 对应的是页面中的js，页面和用户具有一定的交互，同时页面结构或者表现发生变化，主要是有js组成

    2、W3C提出的web规范要求：（标签规范可以提高搜索引擎对页面的抓取效率，对SEO很有帮助）
       2.1 结构 标签字母要小写 标签要闭合 标签不允许顺便嵌套
       2.2 css和js 尽量使用外链css样式表和js脚本，使得项目更加模块化，同时可以提高页面渲染速度，提高用户体验

    3、浏览器内核：
       3.1 webkit内核   代表浏览器（Safari，旧Chrome）
       3.2 Gecko内核    代表浏览器（Firefox），可以跨平台（window，linux，macOS）
       3.3 Trident内核  代表浏览器（IE，遨游，QQ浏览器），不开源
       3.4 Presto内核   代表浏览器（Opera）
       3.4 Blink内核    代表浏览器（新Chrome）

    4、渲染原理
       浏览器从服务器下载html下来后，浏览器渲染引擎从上到下开始渲染，碰到html标签就渲染成dom tree，碰到css样式就渲染成css tree，
       碰到script标签则产生阻塞，必须要等它加载完才能往下渲染








JavaScript：
    数据类型、运算、对象、Function、继承、闭包、作用域、事件、Prototype、RegExp、JSON、Ajax、DOM、BOM、
    内存泄漏、跨域、异步请求、模板引擎、模块化、Flux、同构、算法、ECMAScript6、Nodejs、HTTP、

其他：
    主流MVVM框架(React\Vue\Angular)、Hybrid App\React Native\Weex、TypeScript、RESTFul、WEB安全、前端工程化、依赖管理、性能优化、
    重构、团队协作、可维护、易用性、SEO、UED、前端技术选型、快速学习能力等；